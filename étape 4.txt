adresse virtuel

partie 1 : adressage virtuel par une table de pages
	action 1
		écrire un petit programe de test qui écrit des caractère entrelacé à l'écran.
	action 2
		examiner executable->ReadAt
			lis depuis un fichier et mets dans un emplacement mémoire
		l'emplacement mémoire choisit est la mémoire principale (pas de virtualisation)
	action 3
		écrire une fonction qui écrit en mémoire en utilisant l'adressage virtuel
			utilisation d'un buffer dans lequel on lit avec ReadAt
			on ecrit ce qu'il y a dans le buffer vers la page virtuelle choisie avec WriteMem
				on doit mettre à jour la PageTable et la PageTableSize de la machine afin d'écrire aux bons endroits
					peut être qu'il faudra réstaurer après l'ecriture dans le cas du multithreading
	action 4
		projeté sur le cadre physique
			une page virtuelle est mappée sur la page physique suivante
				on remarque que le ppn (physical page number) = vpn (virtual page number) + 128 (taille d'une page)
	action 5
		frame provider
			utilisation d'une bitmap
				utilisation des méthodes proposées pour:
					chercher un cadre vide et l'utiliser
					libérer un cadre				NumAvailableFrame
	action 6
		refaire addrspace pour utiliser la pagination
			ppn = GetEmptyFrame de FrameProvider
				vérifier que page valide: >=0
			libérer toutes les pages physiques de la pageTable de l'espace d'adressage à sa destruction

choix d'implémentation
	façon d'écrire dans la mémoire
		Ecriture dans buffer avec ReadAt
		Ecriture du buffer vers page virtuelle avec WriteMem
	allocation et sytem de cadre/pagination

test
	allouer des pages
	allouer un nombre de gapes max
	free des pages
	faire une succession d'alloc et de free
	essayer de finir sans free et vois si c'est crade

partie 2 : executer plusieurs programmes en même temps
	action 1
		appel system : ForkExec()
			fait un fork()
	action 2
		faire en sorte que le dernier processus arrete la machine
			faire une liste de process
			si first->next est NULL et que first s'arrete, alors on fait un halt()
	action 3
		faire un gros test
	action 4
		vérifier que tout se fini correctement

choix d'implémentation
	dernier process arrete la machine

test


partie 3 : shell
	comprendre ce que fait le programme
	faire un petit shell pour faire un truc similaire

choix d'implémentation
	

test


partie 4 : allocation dynamique de mémoire
	
	action 1
	action 2
	action 3

choix d'implémentation
	

test
